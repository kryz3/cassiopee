import OpenAI from "openai";

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function POST(req) {
  try {
    const { messages, sujet } = await req.json();
 

    if (!messages || messages.length === 0) {
      return Response.json({ error: "Aucun message √† corriger." }, { status: 400 });
    }

    const userMessage = messages.find(msg => msg.role === "user");
    if (!userMessage) {
      return Response.json({ error: "Aucun message utilisateur trouv√©." }, { status: 400 });
    }

    if (!sujet) {
      return Response.json({ error: "Sujet non fourni pour la r√©cup√©ration de la grille." }, { status: 400 });
    }

    // Appel API pour r√©cup√©rer la grille de correction
    const gridRes = await fetch("http://157.159.116.203:5001/Ecos/api/getEcosGrid", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: sujet }),
    });


    if (!gridRes.ok) {
      return Response.json({ error: "Erreur lors de la r√©cup√©ration de la grille." }, { status: 500 });
    }

    const gridData = await gridRes.json();
    const ecosGrid = gridData?.instructions;

    

    // Formatage de la grille pour l‚Äôint√©grer au prompt
    const grilleEvaluationString = ecosGrid
      .map(item => `"${item.consigne}" (${item.note} pts)`)
      .join("\n");

    const formattedMessages = messages
      .map(msg => `${msg.role === "user" ? "Utilisateur" : "Assistant"}: ${msg.content}`)
      .join("\n");

    // Appel √† OpenAI avec la grille format√©e
    const assistantResponse = await openai.chat.completions.create({
      model: "gpt-4-turbo",
      messages: [
        {
          role: "system",
          content: `Tu es m√©decin examinateur et tu dois √©valuer un √©tudiant √† partir de la grille suivante :
${grilleEvaluationString}
Tu dois noter chaque item de la grille un par un, m√™me s‚Äôil n‚Äôa pas √©t√© r√©alis√© ou mentionn√©. Le nombre total d‚Äôitems peut varier (ce n‚Äôest pas toujours 15).
Pour chaque ligne, utilise exactement ce format :
1. Nom de l‚Äôitem : Oui (1 pt) \n
ou
2. Nom de l‚Äôitem : Non r√©alis√© correctement (0 pt) \n
ou
3. Nom de l‚Äôitem : Non mentionn√© (0 pt) \n
√Ä la fin, affiche :
<br />\n
<strong>Total des points : X/Y </strong>\n
(o√π X = nombre de points obtenus, Y = total des points possibles, selon la grille fournie)
üî∏ Ensuite, √©value les 4 crit√®res suivants sous le titre : <br />\n<strong>Communication et attitudes </strong>\n
Pour chaque crit√®re, indique le niveau et une courte justification.
Utilise le bar√®me ci-dessous :
APTITUDE √Ä √âCOUTER
0 : Interrompt / ignore
0.25 : Impatient
0.5 : Attentif aux r√©ponses
0.75 : Reformule si impr√©cis
1 : √âcoute soutenue, pr√©occupations prises en compte
APTITUDE √Ä QUESTIONNER
0 : Questions ferm√©es/jargon
0.25 : S‚Äô√©loigne des objectifs / jargon mal expliqu√©
0.5 : Questions vari√©es / jargon expliqu√©
0.75 : Questions pr√©cises, langage adapt√©
1 : Assur√©, pertinent
APTITUDE √Ä STRUCTURER / MENER L‚ÄôENTREVUE
0 : D√©sordonn√©
0.25 : Peu structur√©
0.5 : Centr√©, essentiels abord√©s
0.75 : Logique et efficace
1 : Approche int√©gr√©e
APTITUDE √Ä FOURNIR LES RENSEIGNEMENTS AU PATIENT
0 : Informations erron√©es ou absentes
0.25 : Incompl√®tes / peu pertinentes
0.5 : Adapt√©es mais compr√©hension peu v√©rifi√©e
0.75 : Claires et v√©rifi√©es
1 : Justes, illustr√©es, parfaitement comprises
üîπ Enfin, √©value la performance globale sous : <br />\n<strong>Performance globale</strong>\n
Utilise ce bar√®me :
0 : Tr√®s au-dessous des attentes
0.25 : Limite
0.5 : Satisfaisante
0.75 : Tr√®s satisfaisante
1 : Remarquable
Et ajoute une phrase de justification.
‚ùó Respecte scrupuleusement le format d‚Äôexemple suivant avec les balises <strong> et tous les \n de retour √† la ligne.
üîΩ EXEMPLE DE SORTIE ATTENDUE :
Pr√©sentation au patient : Oui (1 pt) \n
Identification du motif de consultation : Oui (1 pt) \n
Questionnement sur les ant√©c√©dents : Non mentionn√© (0 pt) \n
Recherche des signes associ√©s : Oui (1 pt) \n
Recherche des facteurs d√©clenchants : Oui (1 pt) \n
Recherche de la chronologie des sympt√¥mes : Oui (1 pt) \n
Interrogatoire sur les traitements d√©j√† pris : Non r√©alis√© correctement (0 pt) \n
Recherche de signes de gravit√© : Non mentionn√© (0 pt) \n
Examen physique cibl√© : Oui (1 pt) \n
Prise en compte du contexte psychosocial : Non mentionn√© (0 pt) \n
Reformulation des propos du patient : Non r√©alis√© correctement (0 pt) \n
Structuration de l‚Äôentretien : Oui (1 pt) \n
Explication du diagnostic pr√©sum√© : Non mentionn√© (0 pt) \n
Proposition d‚Äôun plan de prise en charge : Oui (1 pt) \n
V√©rification de la compr√©hension du patient : Non mentionn√© (0 pt) \n
<br />\n
<strong>Total des points : 8/15 </strong>\n
<br />\n
<strong>Communication et attitudes </strong>\n
Aptitude √† √©couter : Satisfaisante (0.5) - L‚Äô√©tudiant a montr√© une √©coute attentive mais sans reformulation des pr√©occupations du patient. \n
Aptitude √† questionner : Tr√®s satisfaisante (0.75) - Les questions sont ouvertes, pr√©cises et bien cibl√©es. \n
Aptitude √† structurer/mener l‚Äôentrevue : Satisfaisante (0.5) - L‚Äôentretien est organis√© mais pr√©sente quelques digressions. \n
Aptitude √† fournir les renseignements au patient : Limite (0.25) - Peu d'informations fournies et compr√©hension non v√©rifi√©e. \n
<br />\n
<strong>Performance globale</strong>\n
Performance : Satisfaisante (0.5) - Bonne ma√Ætrise globale, mais quelques oublis essentiels limitent la qualit√© de la prise en charge. \n`,
        },
        {
          role: "user",
          content: `Note la performance de l'√©l√®ve :\n${formattedMessages}`,
        },
      ],
      temperature: 0.5,
    });



    const correctedText = assistantResponse.choices[0]?.message?.content || "Erreur lors de la correction.";

    return Response.json({ correction: correctedText });

  } catch (error) {
    console.error("Erreur dans /api/correction :", error);
    return Response.json({ error: "Erreur interne du serveur." }, { status: 500 });
  }
}
